# -*- coding: utf-8 -*-
"""Manohar

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qV5U0Ddhtdp4BkSljTDe6VrpU-WcViqu

Dataset Link - https://www.kaggle.com/datasets/mubeenshehzadi/customer-purchase-behaviour
"""

import pandas as pd

# Read the CSV file (adjust file path or delimiter as needed)
df = pd.read_csv('/content/shopping_behavior_updated.csv', sep=',')
print("\nShape of dataset:", df.shape)

df

print(df.isnull().sum())

duplicate_count = df.duplicated().sum()
print(f" Duplicate rows found: {duplicate_count}")

print(" Descriptive Statistics (Numerical Columns):\n")
print(df.describe().T)

print(" Data Cleaning & Summary Completed.")
print("Final Shape:", df.shape)

# Clean column names: lowercase, replace spaces and parentheses with underscores
df.columns = (
    df.columns.str.strip()
              .str.lower()
              .str.replace(" ", "_", regex=False)
              .str.replace("(", "", regex=False)
              .str.replace(")", "", regex=False)
)


print(df.columns.tolist())

df.columns

"""#  Statistical plot - Heat Map"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#  Ensure age groups are defined
bins = [18, 25, 35, 45, 55, 65, 75]
labels = ['18-24', '25-34', '35-44', '45-54', '55-64', '65-74']
df['age_group'] = pd.cut(df['age'], bins=bins, labels=labels, right=False)

# Compute average purchase per age group & category
age_category_avg = df.groupby(['age_group', 'category'])['purchase_amount_usd'].mean().reset_index()

# Pivot table for heatmap
pivot_df = age_category_avg.pivot(index='category', columns='age_group', values='purchase_amount_usd')

# Plot heatmap
plt.figure(figsize=(10,6))
sns.heatmap(
    pivot_df,
    annot=True,
    fmt=".1f",
    cmap="YlGnBu",
    linewidths=.5,
    cbar_kws={'label':'Avg Purchase Amount (USD)'}
)
plt.title("Heatmap: Average Purchase Amount by Category and Age Group", fontsize=14)
plt.xlabel("Age Group")
plt.ylabel("Category")
plt.tight_layout()
plt.show()

"""# Categorical plot - Bar Plot"""

import matplotlib.pyplot as plt
import seaborn as sns

# Count how many customers used each payment method
payment_counts = df['payment_method'].value_counts().reset_index()
payment_counts.columns = ['payment_method', 'count']

# Plot horizontal bar
plt.figure(figsize=(8,5))
sns.barplot(
    data=payment_counts,
    y='payment_method',
    x='count',
    palette='coolwarm'
)

# Annotate bars with counts
for i, row in payment_counts.iterrows():
    plt.text(row['count'] + 1, i, str(row['count']), va='center', fontsize=10)

plt.title("Popularity of Payment Methods", fontsize=14)
plt.xlabel("Number of Customers")
plt.ylabel("Payment Method")
plt.tight_layout()
plt.show()

"""# Relational plot - Line plot"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


season_purchase = df.groupby('season')['purchase_amount_usd'].sum().reset_index()


season_order = ['Winter', 'Spring', 'Summer', 'Fall']
season_purchase['season'] = pd.Categorical(season_purchase['season'], categories=season_order, ordered=True)
season_purchase = season_purchase.sort_values('season')


plt.figure(figsize=(8,5))
sns.lineplot(
    data=season_purchase,
    x='season',
    y='purchase_amount_usd',
    marker='o',
    linewidth=2,
    color='teal'
)


for i, row in season_purchase.iterrows():
    plt.text(row['season'], row['purchase_amount_usd'] + 500, f"${row['purchase_amount_usd']:.0f}",
             ha='center', fontsize=10, fontweight='bold')

plt.title("Seasonal Trends in Total Purchase Amount", fontsize=14)
plt.xlabel("Season")
plt.ylabel("Total Purchase Amount (USD)")
plt.ylim(50000, 70000)
plt.grid(True, linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()

top_items = df['item_purchased'].value_counts().head(10).reset_index()
top_items.columns = ['item', 'count']

plt.figure(figsize=(8,5))
sns.barplot(data=top_items, y='item', x='count', palette='magma')
plt.title("Top 10 Most Frequently Purchased Items")
plt.xlabel("Number of Purchases")
plt.ylabel("Item")
plt.show()

discount_category = df.groupby(['category','discount_applied'])['purchase_amount_usd'].sum().unstack().fillna(0)

discount_category.plot(kind='bar', stacked=True, figsize=(10,6), colormap='coolwarm')
plt.title("Total Purchase Amount by Category and Discount Applied")
plt.ylabel("Total Purchase Amount (USD)")
plt.xlabel("Category")
plt.legend(title="Discount Applied")
plt.show()

subscription_counts = df['subscription_status'].value_counts()

plt.figure(figsize=(6,6))
plt.pie(subscription_counts, labels=subscription_counts.index, autopct='%1.1f%%', colors=['lightblue','salmon'], startangle=90)
plt.title("Proportion of Subscribed vs Non-Subscribed Customers")
plt.show()

plt.figure(figsize=(8,5))
sns.boxplot(data=df, x='shipping_type', y='purchase_amount_usd', palette='Set2')
plt.title("Purchase Amount Distribution by Shipping Type")
plt.xlabel("Shipping Type")
plt.ylabel("Purchase Amount (USD)")
plt.show()

loc_total = df.groupby('location')['purchase_amount_usd'].sum().sort_values(ascending=True).reset_index()

plt.figure(figsize=(10,8))
sns.barplot(data=loc_total, y='location', x='purchase_amount_usd', palette='plasma')
plt.title("Total Purchase Amount by Location")
plt.xlabel("Total Purchase Amount (USD)")
plt.ylabel("Location")
plt.show()